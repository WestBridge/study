C++:
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int length=matrix.size();
        if(length==0||length==1) return;
        reverse(matrix.begin(),matrix.end());
        for(int i=0;i<length;i++){
            for(int j=i+1;j<length;j++){
            swap(matrix[i][j],matrix[j][i]);
        }
    }
    }
     
    
};
java:
public class Solution {
    public void rotate(int[][] matrix) {
        int length=matrix.length;
        if(length==0||length==1) return;
        
        for(int i=0;i<length;i++){
            for(int j=i+1;j<length;j++){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;
           
        }
        }
        for(int i=0;i<length;i++){
            for(int j=0;j<length/2;j++){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[i][length-1-j];
                matrix[i][length-1-j]=temp;
            }
        }
    }
    
}
public class Solution {
    public void rotate(int[][] matrix) {
        int n=matrix.length;
        if(n==0||n==1) return;
     
    for (int i=0; i<n/2; ++i)
    {
        for (int j=i; j<n-1-i; ++j)
        {
            int z = matrix[i][j];
            matrix[i][j] = matrix[n-1-j][i];
            matrix[n-1-j][i] = matrix[n-1-i][n-1-j];
            matrix[n-1-i][n-1-j] = matrix[j][n-1-i];
            matrix[j][n-1-i] = z;
        }
    }

      
    }
    
}
