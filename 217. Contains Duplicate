java:
public class Solution {
    public boolean containsDuplicate(int[] nums) {
    HashSet<Integer> hs=new HashSet<Integer>();
    for(int i=0;i<nums.length;i++){
        if(!hs.add(nums[i])){
            return true;
        }
    }
    return false;
    }
}

C++:
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
       
       for(int i=1;i<nums.size();i++){
           if(nums[i]==nums[i-1])
           return true;
       }
       return false;
    }
};

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
         int len;
         len=nums.size();
         if(len<=1) return false;
         sort(nums.begin(),nums.end());
         int i=0,j=len-1;
         
           while(i<j){
               if(nums[i]==nums[i+1])
                return true;
                if(nums[j]==nums[j-1])
                return true;
                j--;
                i++;
           }
           return false;
          
    }
};
