c++:
class Solution {
public:
       vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> res(n,vector<int>(n));
        if(n==0) return res;
        int up,down,left,right,count;
        up=0;down=n-1;left=0;right=n-1;count=1;
        while(true){
           for(int i=left;i<=right;i++){
               res[up][i]=count++;
           }
           if(++up>down) break;
           for(int i=up;i<=down;i++){
               res[i][right]=count++;
           }
           if(--right<left) break;
           for(int i=right;i>=left;i--){
               res[down][i]=count++;
           }
           if(--down<up) break;
           for(int i=down;i>=up;i--){
               res[i][left]=count++;
           }
           if(++left>right) break;
       }
        return res;
    }
};
java:
public class Solution {
    public int[][] generateMatrix(int n) {
        int[][] res=new int[n][n];
        if(n==0) return res;
        int up,down,left,right,count;
        up=0;down=n-1;left=0;right=n-1;count=1;
        while(true){
           for(int i=left;i<=right;i++){
               res[up][i]=count++;
           }
           if(++up>down) break;
           for(int i=up;i<=down;i++){
               res[i][right]=count++;
           }
           if(--right<left) break;
           for(int i=right;i>=left;i--){
               res[down][i]=count++;
           }
           if(--down<up) break;
           for(int i=down;i>=up;i--){
               res[i][left]=count++;
           }
           if(++left>right) break;
       }
        return res;
    }
}
