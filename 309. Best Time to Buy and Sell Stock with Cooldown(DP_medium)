C++:
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()<=1) return 0;
        int sell = 0, presell = 0, buy = -prices[0], prebuy;
        for(int i = 1; i <prices.size(); i++){
            prebuy = buy;
            buy = max(presell - prices[i], prebuy);
            presell = sell;
            sell = max(prebuy + prices[i], presell);
        }
        return sell;
    }
};

JAVA:
class Solution {
  public int maxProfit(int[] prices) {
    if(prices == null || prices.length <= 1) return 0;
    int sell = 0, presell = 0, buy = -prices[0], prebuy;
    for(int i = 1; i <prices.length; i++){
        prebuy = buy;
        buy = Math.max(presell - prices[i], prebuy);
        presell = sell;
        sell = Math.max(prebuy + prices[i], presell);
        
    }
      return sell;
}
}
