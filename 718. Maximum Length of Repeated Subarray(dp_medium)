C++:
class Solution {
public:
    int findLength(vector<int>& a, vector<int>& b) {
        int m = a.size(), n = b.size();
        if (!m || !n) return 0;
        vector<int> dp(n + 1);
        int res = 0;
        for (int i = m - 1; i >= 0; i--) {
            for (int j = 0; j < n; j++) {
                res = max(res, dp[j] = a[i] == b[j] ? 1 + dp[j + 1] : 0);
            }
        }
        return res;
    }
};
java:
class Solution {
    public int findLength(int[] A, int[] B) {
        if(A == null || B == null) return 0;
        int m = A.length, n = B.length;
        int[] dp = new int[n + 1];
        int res = 0;
        for(int i = m - 1; i >= 0; i-- ){
            for(int j = 0; j < n; j++){
                if(A[i] == B[j]) {
                    dp[j] = dp[j + 1] + 1;         
                }
                else 
                    dp[j] = 0;
                res = Math.max(res, dp[j]);
            }
        }
        return res;
    }
}

