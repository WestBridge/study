C++:
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.size() == 0) return 0;      
        int max_sum = nums[0];
        for(int i = 1; i < nums.size(); i++){
            nums[i] = nums[i] > nums[i] + nums[i - 1] ? nums[i] : nums[i] + nums[i - 1];
            max_sum = max(max_sum, nums[i]);
        }
        return max_sum;
    }
};
JAVA:
public class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length == 0 || nums == null) return 0;  
        int max_sum = nums[0];
        for(int i = 1; i < nums.length; i++){
            nums[i] = nums[i] > nums[i] + nums[i - 1] ? nums[i] : nums[i] + nums[i - 1];
            max_sum = Math.max(max_sum, nums[i]);
        }
        return max_sum;
        
    }
}
