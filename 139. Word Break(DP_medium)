C++:
class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
              
        vector<bool> dp(s.length()+1,false);
        dp[0]=true;
        for(int i=1; i<=s.length();i++){
            for(int j=i-1; j>=0; j--){
                if(dp[j]){
                    string word = s.substr(j,i-j);
                    for(int k=0; k<wordDict.size();k++){
                        if(wordDict[k]==word){
                           dp[i]=true;
                           break;
                            }
                     }
                 }
            }
        }
       return dp[s.length()];
    }
               
};

JAVA:
class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length()+1];
        dp[0]=true;
        for(int i=1; i<=s.length(); i++){
            for(int j=0; j<i; j++){
                if(dp[j]&&wordDict.contains(s.substring(j,i))){
                    dp[i]=true;
                    break;

                }
            }
        }
            
           return dp[s.length()]; 
         
    }
}
