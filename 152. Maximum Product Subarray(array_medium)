C++:
class Solution {
public:
    int maxProduct(vector<int>& nums) {
       
        int res = nums[0];
        for(int i = 1, imax = res, imin = res; i < nums.size(); i++){
            if(nums[i] < 0)
                swap(imax, imin);
            imax = max(nums[i], imax * nums[i]);
            imin = min(nums[i], imin * nums[i]);
            res = max(res, imax);
        }
        
     return res;   
    }
};

java:

public class Solution {
    public int maxProduct(int[] nums) {
        int res = nums[0];
        for(int i = 1, imax = res, imin = res; i < nums.length; i++){
            if(nums[i] < 0)
            {
                int temp = imax;
                imax = imin;
                imin = temp;
            }
            imax = Math.max(nums[i], nums[i] * imax);
            imin = Math.min(nums[i], nums[i] * imin);
            res = Math.max(res, imax);
        }
        return res;
    }
}
